var m=class{constructor(...e){var t,s,g,l,c,h;this.info=[],e.length===0&&e.push("canvas");for(let o of e){let i={query:"",type:"2d",width:window.innerWidth,height:window.innerHeight,timer:null,previous:null,callbacks:[],documentElemenet:document};typeof o=="string"?i.query=o:(i.query=(t=o.query)!=null?t:"",i.type=(s=o.type)!=null?s:"2d",i.width=(g=o.width)!=null?g:window.innerWidth,i.height=(l=o.height)!=null?l:window.innerHeight,i.callbacks=(c=o.callbacks)!=null?c:[],i.documentElemenet=(h=o.documentElemenet)!=null?h:document);let a=i.documentElemenet.querySelector(i.query);if(!a)throw new Error(`[error engine] could not find element: [${i.query}]`);let u=a.getContext(i.type);if(!u)throw new Error("[error engine] could not create rendering context");a.width=i.width,a.height=i.height,this.info.push({setting:i,element:a,context:u})}}get canvas(){return this.getCanvas(0)}get element(){return this.getCanvas(0)}get setting(){return this.getSetting(0)}get context(){return this.getContext(0)}get ctx(){return this.getContext(0)}get width(){return this.canvas.width}get height(){return this.canvas.height}getSetting(e){var t;return(t=this.info[e])==null?void 0:t.setting}getContext(e){var t;return(t=this.info[e])==null?void 0:t.context}getElement(e){var t;return(t=this.info[e])==null?void 0:t.element}getCanvas(e){var t;return(t=this.info[e])==null?void 0:t.element}loop(e,t=0){let s=this.getSetting(t),g=()=>{let l=-1,c=performance.now();s.previous&&(l=c-s.previous),s.previous=c,e&&e(l),s.callbacks.forEach(h=>h(l)),this.info[t].setting.timer=requestAnimationFrame(g)};g()}stop(e=0){let t=this.getSetting(e);t.timer!==null&&cancelAnimationFrame(t.timer)}};function d(r){return new Promise(e=>{let t=new Image;t.src=r,t.onload=()=>{e(t)}})}function p(r){return r.startsWith("/")&&window.location.hostname.endsWith("github.io")?"/"+window.location.pathname.split("/")[1]+r:r}var n=null;function w(...r){n||(n=document.createElement("ol"),n.style.position="fixed",n.style.pointerEvents="none",n.style.top="0",n.style.right="0",n.style.background="rgba(0,0,0,0.2)",n.style.color="white",n.style.padding="1rem",document.documentElement.appendChild(n)),n.children.length>6&&n.firstChild&&n.removeChild(n.firstChild);let e=document.createElement("li");e.innerHTML=r.map(t=>typeof t=="object"?JSON.stringify(t):t).join(" "),n.appendChild(e)}export{m as Engine,d as LoadImage,p as getlink,w as logscreen};
